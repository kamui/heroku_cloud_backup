{"name":"Heroku cloud backup","tagline":"Uploads heroku pgbackups into the cloud using fog.","body":"# Heroku Cloud Backup\r\n\r\n[![Build Status](https://secure.travis-ci.org/kamui/heroku_cloud_backup.png)](http://travis-ci.org/kamui/heroku_cloud_backup)\r\n\r\nThe `heroku_cloud_backup` gem adds a rake task to your project that will take backups stored with Heroku's [PGBackup addon](http://devcenter.heroku.com/articles/pgbackups) and upload them to the cloud.\r\n\r\n## Installation\r\n\r\nIt's recommended that you use this gem in conjunction with the [heroku_backup_task](https://github.com/joemsak/heroku_backup_task) gem. heroku_backup_task adds a rake tasks that will create a fresh database capture and expire the oldest backup if you're at your  capture limit.\r\n\r\nFirst, you need to enable the Heroku PGBackups addon:\r\n\r\n    heroku addons:add pgbackups:basic\r\n\r\nIf you want this to run daily, you'll need to enable the Heroku cron addon:\r\n\r\n    heroku addons:add cron:daily\r\n\r\nFor Rails 3 and later, add this to your Gemfile:\r\n\r\n    gem 'heroku_backup_task'\r\n    gem 'heroku_cloud_backup'\r\n\r\nFor Rails 2.1 and later, add this to your in your environment.rb:\r\n\r\n    config.gem 'heroku_backup_task'\r\n    config.gem 'heroku_cloud_backup'\r\n\r\nIn your Rakefile:\r\n\r\n    require \"heroku_backup_task\"\r\n    require \"heroku_cloud_backup\"\r\n    task :cron do\r\n      HerokuBackupTask.execute\r\n      HerokuCloudBackup.execute\r\n    end\r\n\r\n## Usage\r\n\r\nThe first thing you'll want to do is configure the addon.\r\n\r\nHCB_PROVIDER (aws, rackspace, google) - Add which provider you're using. **Required**\r\n\r\n    heroku config:add HCB_PROVIDER='aws' # or 'google' or 'rackspace'\r\n\r\nHCB_BUCKET (alphanumberic characters, dashes, period, underscore are allowed, between 3 and 255 characters long) - Select a bucket name to upload to. This the bucket or root directory that your files will be stored in. If the bucket doesn't exist, it will be created. **Required**\r\n\r\n    heroku config:add HCB_BUCKET='mywebsite'\r\n\r\nHCB_PREFIX (Defaults to \"db\") - The direction prefix for where the backups are stored. This is so you can store your backups within a specific sub directory within the bucket. heroku_cloud_backup will also append the ENV var of the database to the path, so you can backup multiple databases, by their ENV names. **Optional**\r\n\r\n    heroku config:add HCB_PREFIX='backups/pg'\r\n\r\nHCB_MAX (Defaults to no limit) - The number of backups to store before the script will prune out older backups. A value of 10 will allow you to store 10 of the most recent backups. Newer backups will replace older ones. **Optional**\r\n\r\n    heroku config:add HCB_MAX=10\r\n\r\nDepending on which provider you specify, you'll need to provide different login credentials.\r\n\r\nFor Amazon:\r\n\r\n    heroku config:add HCB_KEY1=\"aws_access_key_id\"\r\n    heroku config:add HCB_KEY2=\"aws_secret_access_key\"\r\n\r\nFor Rackspace:\r\n\r\n    heroku config:add HCB_KEY1=\"rackspace_username\"\r\n    heroku config:add HCB_KEY2=\"rackspace_api_key\"\r\n\r\nFor Google Storage:\r\n\r\n    heroku config:add HCB_KEY1=\"google_storage_secret_access_key\"\r\n    heroku config:add HCB_KEY2=\"google_storage_access_key_id\"\r\n\r\nYou can run this manually like this:\r\n\r\n    heroku rake heroku_backup\r\n    heroku rake heroku:cloud_backup\r\n\r\n## Restoring a backup\r\n\r\nI would recommend you create a temporarily public url from your cloud storage. I do this with Cyberduck. It has a neat feature where you can right click on a file and it'll generate temporarily accessible urls to that file, with the auth params for it. So once you have that url you can store like this:\r\n\r\n    heroku pgbackups:restore 'http://my-bucket-name.s3.amazonaws.com/db/DATABASE_URL/2011-06-09-014500.dump?authparameters'\r\n\r\n## Note on Patches/Pull Requests\r\n\r\n* Fork the project.\r\n* Make your feature addition or bug fix.\r\n* Add tests for it. This is important so I don't break it in a\r\n  future version unintentionally.\r\n* Commit, do not mess with rakefile, version, or history.\r\n  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)\r\n* Send me a pull request. Bonus points for topic branches.\r\n\r\n### Copyright\r\n\r\nCopyright (c) 2011-2013 Jack Chu. See LICENSE for details.","google":"UA-18119942-1","note":"Don't delete this file! It's used internally to help with page regeneration."}